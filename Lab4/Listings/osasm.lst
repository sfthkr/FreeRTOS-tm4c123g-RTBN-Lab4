


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ; OSasm.s: low-level OS commands, written in assembly   
                                           */
    3 00000000         ; Runs on LM4F120/TM4C123/MSP432
    4 00000000         ; Lab 4 starter file
    5 00000000         ; March 25, 2016
    6 00000000         
    7 00000000         ;
    8 00000000         
    9 00000000         
   10 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   11 00000000                 THUMB
   12 00000000                 REQUIRE8
   13 00000000                 PRESERVE8
   14 00000000         
   15 00000000                 EXTERN           RunPt       ; currently running
                                                             thread
   16 00000000                 EXPORT           StartOS
   17 00000000                 EXPORT           SysTick_Handler
   18 00000000                 IMPORT           Scheduler
   19 00000000         
   20 00000000         
   21 00000000         SysTick_Handler                      ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
   22 00000000 B672            CPSID            I           ; 2) Prevent interr
                                                            upt during switch
   23 00000002         ;YOU IMPLEMENT THIS (same as Lab 3)
   24 00000002 E92D 0FF0       PUSH             {R4-R11}    ; 3) Save rem. R4-R
                                                            11
   25 00000006 480F            LDR              R0,=RunPt   ; 4) R0 = RunPt, ol
                                                            d thread
   26 00000008 6801            LDR              R1, [R0]    ; 5) R1= RunPt->sp
   27 0000000A F8C1 D000       STR              SP, [R1]    ; 6) Store sp to tc
                                                            b
   28 0000000E B501            PUSH             {R0,LR}
   29 00000010 F7FF FFFE       BL               Scheduler
   30 00000014 E8BD 4001       POP              {R0, LR}
   31 00000018 6801            LDR              R1, [R0]    ; 7) R1 = RunPt, ne
                                                            w thread
   32 0000001A F8D1 D000       LDR              SP, [R1]    ; 8) new thread, SP
                                                            = RunPt->sp
   33 0000001E E8BD 0FF0       POP              {R4-R11}
   34 00000022 B662            CPSIE            I           ; 9) tasks run with
                                                             interrupts enabled
                                                            
   35 00000024 4770            BX               LR          ; 10) restore R0-R3
                                                            ,R12,LR,PC,PSR
   36 00000026         
   37 00000026         StartOS
   38 00000026         ;YOU IMPLEMENT THIS (same as Lab 3)
   39 00000026 4807            LDR              R0, =RunPt  ; Current running t
                                                            hread
   40 00000028 6801            LDR              R1, [R0]    ; R1 = RunPt
   41 0000002A F8D1 D000       LDR              SP, [R1]    ; SP = RunPt->sp
   42 0000002E E8BD 0FF0       POP              {R4-R11}    ; Restore reg R4-R1
                                                            1
   43 00000032 BC0F            POP              {R0-R3}     ; Restore R0-R3



ARM Macro Assembler    Page 2 


   44 00000034 F85D CB04       POP              {R12}       ; Restore R12
   45 00000038 B001            ADD              SP,SP,#4    ; Discard LR of Ini
                                                            tial Stack
   46 0000003A F85D EB04       POP              {LR}        ; Starting location
                                                            
   47 0000003E B001            ADD              SP,SP,#4    ; Discard PSR
   48 00000040 B662            CPSIE            I           ; Enable interrupts
                                                             at processor level
                                                            
   49 00000042 4770            BX               LR          ; start first threa
                                                            d
   50 00000044                 ALIGN
   51 00000044                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\osasm.d -o.\objects\osasm.o -I.\RTE\_Target -ID:\Keil\AR
M\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil\ARM\PACK\Keil\TM4C_DFP\1.1.
0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VER
SION SETA 526" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --l
ist=.\listings\osasm.lst osasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 10 in file osasm.s
   Uses
      None
Comment: .text unused
StartOS 00000026

Symbol: StartOS
   Definitions
      At line 37 in file osasm.s
   Uses
      At line 16 in file osasm.s
Comment: StartOS used once
SysTick_Handler 00000000

Symbol: SysTick_Handler
   Definitions
      At line 21 in file osasm.s
   Uses
      At line 17 in file osasm.s
Comment: SysTick_Handler used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

RunPt 00000000

Symbol: RunPt
   Definitions
      At line 15 in file osasm.s
   Uses
      At line 25 in file osasm.s
      At line 39 in file osasm.s

Scheduler 00000000

Symbol: Scheduler
   Definitions
      At line 18 in file osasm.s
   Uses
      At line 29 in file osasm.s
Comment: Scheduler used once
2 symbols
341 symbols in table
